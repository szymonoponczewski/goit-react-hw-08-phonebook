{"version":3,"file":"static/js/683.eee3eb55.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","redux/contacts/selectors.js","pages/Phonebook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"button\":\"ContactForm_button__eSwX9\",\"input\":\"ContactForm_input__Bl93P\"};","import { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/operations\";\nimport css from \"./ContactForm.module.css\";\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector((state) => state.contacts.contacts);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const form = event.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    const contact = {\n      name,\n      number,\n    };\n\n    const contactExists = contacts.some(\n      (existingContact) =>\n        existingContact.name === name && existingContact.number === number\n    );\n\n    if (contactExists) {\n      form.reset();\n      return alert(`${name} is already in phonebook`);\n    }\n\n    dispatch(addContact(contact));\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label className={css.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          className={css.input}\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          className={css.input}\n        />\n      </label>\n      <button type=\"submit\" className={css.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Label\":\"Filter_Label__MldcW\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch } from \"react-redux\";\nimport { filterContact } from \"../../redux/contacts/filterSlice\";\nimport css from \"./Filter.module.css\";\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = (event) => {\n    const filterValue = event.target.value;\n    dispatch(filterContact(filterValue));\n  };\n\n  return (\n    <label className={css.Label}>\n      Search contacts by name\n      <input\n        type=\"text\"\n        placeholder=\"Search...\"\n        onChange={handleFilter}\n        className={css.input}\n      />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"element\":\"ContactList_element__v3kbj\",\"button\":\"ContactList_button__7kL4l\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/contacts/operations\";\nimport { selectFilter } from \"../../redux/contacts/filterSlice\";\nimport css from \"./ContactList.module.css\";\n\nexport const ContactList = () => {\n  const contacts = useSelector((state) => state.contacts.contacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleDelete = (id) => {\n    dispatch(deleteContact(id));\n  };\n\n  const filteredContacts = [...contacts]\n    .sort((firstContact, secondContact) =>\n      firstContact.name.localeCompare(secondContact.name)\n    )\n    .filter((contact) =>\n      contact.name.toLowerCase().includes(filter && filter.toLowerCase())\n    );\n\n  return filteredContacts.length <= 0 ? (\n    <p>No contacts in your phone book ...</p>\n  ) : (\n    <ul>\n      {filteredContacts.map((contact) => (\n        <li key={contact.id} className={css.element}>\n          {contact.name}: {contact.number}\n          <button\n            onClick={() => handleDelete(contact.id)}\n            className={css.button}\n          >\n            X\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { createSelector } from \"@reduxjs/toolkit\";\nimport { selectFilter } from \"./filterSlice\";\n\nexport const selectIsLoading = (state) => state.contacts.isLoading;\nexport const selectError = (state) => state.contacts.error;\nexport const selectContacts = (state) => state.contacts.contacts;\nexport const selectFilteredContacts = (state) => state.filters;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (filter === \"\") {\n      return contacts;\n    } else {\n      return contacts.filter(\n        (contact) => contact.name.toLowerCase().includes(filter.filter) ?? []\n      );\n    }\n  }\n);\n","import { React, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { ContactForm } from \"../components/ContactForm/ContactForm\";\nimport { Filter } from \"../components/Filter/Filter\";\nimport { ContactList } from \"../components/ContactList/ContactList\";\nimport { selectIsLoading } from \"../redux/contacts/selectors\";\nimport { fetchContacts } from \"../redux/contacts/operations\";\n\nconst Phonebook = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n      </HelmetProvider>\n      <ContactForm />\n      <h2>Phonebook</h2>\n      <Filter />\n      {isLoading ? <p>Loading contacts...</p> : <ContactList />}\n    </div>\n  );\n};\n\nexport default Phonebook;\n"],"names":["ContactForm","dispatch","useDispatch","contacts","useSelector","state","_jsxs","onSubmit","event","preventDefault","form","target","name","elements","value","number","contact","some","existingContact","reset","alert","concat","addContact","className","css","children","_jsx","type","pattern","title","required","Filter","placeholder","onChange","filterValue","filterContact","ContactList","filter","selectFilter","filteredContacts","_toConsumableArray","sort","firstContact","secondContact","localeCompare","toLowerCase","includes","length","map","onClick","id","deleteContact","selectIsLoading","isLoading","createSelector","_contact$name$toLower","useEffect","fetchContacts","HelmetProvider","Helmet"],"sourceRoot":""}